name: Process Figma Tokens PR

on: pull_request

jobs:
  run_if:
    if: ${{ github.head_ref == 'figma-tokens' }}
    name: Process Figma Tokens
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          repository: ${{ github.event.pull_request.head.repo.full_name }}
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Install Dependencies
        run: npm install

      - name: Run style-dictionary
        run: npx nx build @mmhuntsberry/tokens

      - name: Run who am i
        run: |
          git config --global user.email "mmhuntsberry@gmail.com"
          git config --global user.name "mmhuntsberry"

      - name: Bump patch version and generate changelog
        id: version
        run: |
          cd packages/tokens
          npm install -g standard-version
          export VERSION=$(npm version patch --no-git-tag-version)
          standard-version --skip.tag --infile CHANGELOG.md

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          author_name: Matthew Huntsberry
          author_email: mmhuntsberry@gmail.com
          message: "chore: style-dictionary output (version ${{ env.VERSION }})"
          add: "."

      - name: Create Git tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}

      - name: Create Release
        run: |
          npm install --save @octokit/rest
          node -e '
            const { Octokit } = require("@octokit/rest");
            const octokit = new Octokit({ auth: process.env.GH_PACKAGE_TOKEN });
            
            const { data: release } = await octokit.repos.createRelease({
              owner: process.env.GITHUB_REPOSITORY_OWNER,
              repo: process.env.GITHUB_REPOSITORY,
              tag_name: process.env.VERSION,
              name: "Release " + process.env.VERSION,
              body: "Changelog:\n" + require("child_process").execSync("git log $(git describe --tags --abbrev=0)..HEAD --pretty=format:\"- %s%n\"").toString(),
              draft: false,
              prerelease: false
            });
            
            console.log("Release created:", release.html_url);
          '
        env:
          GH_PACKAGE_TOKEN: ${{ secrets.GH_PACKAGE_TOKEN }}
          VERSION: ${{ env.VERSION }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
